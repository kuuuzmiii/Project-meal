{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA,gDAAgD;AAChD,0EAA0E;AAC1E,8DAA8D;AAC9D;AACA,oFAAoF;AACpF,8DAA8D;AAC9D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE,yFAAyF;AACzF;AACA;AACA,2CAA2C;AAC3C,8DAA8D;AAC9D;AACA;AACA;AACA,+BAA+B;AAC/B,8GAA8G;AAC9G,UAAU,MAAM;AAChB,+GAA+G;AAC/G;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA,6EAA6E;AAC7E;AACA;AACA,kDAAkD;AAClD;AACA,kEAAkE;AAClE,wFAAwF;AACxF,iBAAiB,mDAAmD;AACpE,yDAAyD;AACzD,6EAA6E;AAC7E;AACA;AACA,6CAA6C;AAC7C;AACA,iBAAiB;AACjB;AACA,6BAA6B;AAC7B,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E,4FAA4F;AAC5F;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA,qDAAqD;AACrD;AACA,cAAc;AACd;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;AC7H8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,MAAM;AACN,2CAA2C,8BAA8B;AACzE;AACA;AACA;AACA;AACA,2BAA2B,UAAU,MAAM,SAAS;AACpD,wDAAwD,WAAW;AACnE,sDAAsD,WAAW,MAAM,YAAY;AACnF;AACA;AACA;AACA,0DAA0D,cAAc;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,+DAAW;AACf,+BAA+B;AAC/B,uBAAuB,6BAA6B,MAAM;AAC1D,qFAAqF;AACrF;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC1DyB;AACC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,cAAc;AACvF,kDAAkD;AAClD;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,iCAAiC;AACjC,oBAAoB;AACpB,gBAAgB,4DAAQ;AACxB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,uCAAuC,uBAAuB,OAAO;AACrE,oBAAoB,MAAM;AAC1B;AACA,gBAAgB;AAChB;AACA,SAAS;AACT;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA,QAAQ,iDAAS;AACjB;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAU;AACtB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACvGpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;AACD;;;;;;;;;;;;;;;AC9DpB,kBAAkB,+EAA+E;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,kCAAkC,iBAAiB;AACnD,gCAAgC,wBAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,kDAAkD;AAClD,gCAAgC,aAAa;AAC7C,kCAAkC,MAAM;AACxC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,wCAAwC;AACxC,+CAA+C;AAC/C,6CAA6C;AAC7C;AACA;AACA;AACA,KAAK,GAAG;AACR;AACA,wCAAwC;AACxC;AACA,qDAAqD;AACrD,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,iBAAiB,iBAAiB;AAClC,8CAA8C;AAC9C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,mDAAmD;AACnD,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,mDAAmD;AACnD;AACA;AACA,iDAAiD,OAAO,MAAM;AAC9D;AACA,+BAA+B;AAC/B;AACA,KAAK;AACL;AACA;AACA,kBAAkB;AAClB,gBAAgB;AAChB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,iDAAiD,OAAO;AACxD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB,KAAK;AACL;AACA;AACA;AACA,gEAAgE;AAChE;AACA,yBAAyB;AACzB,kEAAkE;AAClE;AACA,qDAAqD,OAAO,MAAM;AAClE;AACA;AACA,sBAAsB;AACtB,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;ACpMrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;ACzCnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;AC7DpB,yDAAyD;AACzD,0DAA0D;AAC1D;AACA,iBAAiB,kCAAkC;AACnD;AACA,KAAK;AACL;AACA,6BAA6B;AAC7B;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,kBAAkB;AAClB,sCAAsC,IAAI,aAAa,WAAW,IAAI;AACtE;AACA;AACA;AACA;AACA;AACkB;;;;;;;UCpBlB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNa;AACb;AACkC;AACE;AACF;AACE;AACA;AACE;AACF;AACK;AACzC;AACA;AACA,yCAAyC,yDAAS;AAClD;AACA,UAAU,yDAAI;AACd,UAAU,0DAAK;AACf,UAAU,yDAAI;AACd,UAAU,0DAAK;AACf,UAAU,0DAAK;AACf,UAAU,2DAAM;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,UAAU,0DAAK;AACf;AACA,CAAC;AACD","sources":["webpack://zadanie-three/./js/modules/calc.js","webpack://zadanie-three/./js/modules/cards.js","webpack://zadanie-three/./js/modules/forms.js","webpack://zadanie-three/./js/modules/modal.js","webpack://zadanie-three/./js/modules/slider.js","webpack://zadanie-three/./js/modules/tabs.js","webpack://zadanie-three/./js/modules/timer.js","webpack://zadanie-three/./js/services/services.js","webpack://zadanie-three/webpack/bootstrap","webpack://zadanie-three/webpack/runtime/define property getters","webpack://zadanie-three/webpack/runtime/hasOwnProperty shorthand","webpack://zadanie-three/webpack/runtime/make namespace object","webpack://zadanie-three/./js/script.js"],"sourcesContent":["function calc () {\r\n    // калькулятор для расчета калорий\r\n\r\n    const result = document.querySelector('.calculating__result span'); // переменная с тем куда выведется ответ\r\n\r\n    let sex, \r\n        height, \r\n        weight, \r\n        age, \r\n        ratio;\r\n\r\n        // sex ratio это дефолтные значения мы установили, чтобы если пользователь вдруг не выбрал они стоялт\r\n\r\n        \r\n    if(localStorage.getItem('sex')){                   // проверяем не записаны ли значнеия в localStorage если да то уст их иначе не\r\n        sex = localStorage.getItem('sex');\r\n    }else{\r\n        sex='female';\r\n        localStorage.setItem('sex','female');\r\n    }\r\n\r\n    if(localStorage.getItem('ratio')){                   // проверяем не записаны ли значнеия в localStorage если да то уст их иначе не\r\n        ratio = localStorage.getItem('ratio');\r\n    }else{\r\n        ratio= 1.375;\r\n        localStorage.setItem('ratio',1.375);\r\n    }\r\n\r\n    function initLocalSettings(selector,activClass){ // функция уст значения согластно записямlocalStorage\r\n        const elem = document.querySelectorAll(selector);\r\n\r\n        elem.forEach(item => {\r\n            item.classList.remove(activClass);  // сначала удаляем класс\r\n            if(item.getAttribute('id') === localStorage.getItem('sex')){  //если есть данные по этому элементу в localStorage \r\n                item.classList.add(activClass);               // уст класс активностти\r\n            }\r\n            if(item.getAttribute('data-ratio') === localStorage.getItem('ratio')){  //если есть данные по этому элементу в localStorage \r\n                item.classList.add(activClass);               // уст класс активностти\r\n            }\r\n        })\r\n    \r\n        \r\n\r\n    }\r\n\r\n    initLocalSettings('#gender div','calculating__choose-item_active'); // класс с полом div т.к обращаются к блокам этого селектора\r\n    initLocalSettings('.calculating__choose_big div','calculating__choose-item_active'); // класс с активностью движений div т.к обращаются к блокам этого селектора\r\n\r\n\r\n    function calcTotal (){                 // функция подсчитывает конечный результат (запускается кажый раз полсе изменения(добавления значения))\r\n        if(!sex || !height || !weight || !age || !ratio) {    // проверка(значение расчитывается когда заполнены все значения)\r\n        result.textContent = 'Введите все значения';\r\n        return;\r\n        }\r\n        if(sex === 'female') { // для женщин\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio); // формулы для расчета\r\n        } else{ //для мужчин\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio); // формулы для расчета\r\n        }\r\n    }  //Math.round округляется до ближайшего целого значения\r\n\r\n    calcTotal();\r\n\r\n    // данные которые задаются с помощью клика(выбор значений со страницы)\r\n    function getStaticInformation (selector , activeClass) {  // parentSelector - родитель блок(их у нас 2) с которого получаем знач\r\n                                                                    // activeClass класс активности когда мы опред какой блок\r\n        const elements = document.querySelectorAll(selector);                // элементы внутри этого блока \r\n        \r\n        elements.forEach(item =>{\r\n            item.addEventListener('click',(e)=>{  //вешаем на каждый элемент обработчик событий, чтобы при попадании на пустую область не было багов\r\n                if(e.target.getAttribute('data-ratio')){\r\n                    ratio = +e.target.getAttribute('data-ratio'); // Если есть атрибут то мы берем его иначе будем брать айдишники\r\n                    localStorage.setItem('ratio',+e.target.getAttribute('data-ratio')); //записали localstorage чтобы запомнить значение при след заходе\r\n                }else{                                              // Так мы определили из какого блока берется значение\r\n                    sex = e.target.getAttribute('id');   // мужчина или женщина\r\n                    localStorage.setItem('sex',e.target.getAttribute('id')); //записали localstorage чтобы запомнить значение при след заходе\r\n                }\r\n                \r\n                elements.forEach(elem =>{    // назначение класса активности у нажатого элемента\r\n                    elem.classList.remove(activeClass);\r\n                })\r\n                e.target.classList.add(activeClass);\r\n                calcTotal(); // после изменения чтобы знач менялись если пустые\r\n            })\r\n        })\r\n        \r\n    \r\n\r\n    } \r\n    // убираем и добавляем класс активности и считываем значения\r\n    getStaticInformation('#gender div','calculating__choose-item_active'); // класс с полом div т.к обращаются к блокам этого селектора\r\n    getStaticInformation('.calculating__choose_big div','calculating__choose-item_active'); // класс с активностью движений\r\n\r\n    // функция которая будет обрабатывать каждый отдельный инпут\r\n\r\n    function getDinamicInformation(selector){\r\n        const input = document.querySelector(selector);  // selector инпута который нас интересует\r\n        input.addEventListener('input',(e)=>{   \r\n            if(input.value.match(/\\D/ig) ){          // проверка на то что не вводится буква\r\n                input.style.border = `1px solid red`;\r\n            } else{\r\n                input.style.border = `none`;\r\n            }  \r\n\r\n        switch (input.getAttribute('id')) {          // проверка на какой инпут мы нажимаем и вводим\r\n                case 'height':\r\n                height = +input.value;\r\n                break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                break;\r\n        } \r\n        calcTotal(); // после изменения чтобы знач менялись если пустые\r\n        });\r\n        \r\n    }\r\n    getDinamicInformation('#height');\r\n    getDinamicInformation('#weight');\r\n    getDinamicInformation('#age');\r\n\r\n}\r\n\r\nexport default calc;","import {getResource} from '../services/services';\r\n\r\nfunction cards (){\r\n    // shablonizaciya -----------------------------------------------------------------------------------------------------------------------\r\n    const menuParent = document.querySelector('.menu__field'),\r\n    menu = menuParent.querySelector('.container');\r\n\r\n    class MenuCard {\r\n    constructor(src,alt,title,opisan,stoimost,parentSelector,...classes){\r\n        this.src = src;\r\n        this.alt = alt; \r\n        this.title = title;\r\n        this.opisan = opisan;\r\n        this.stoimost = stoimost;\r\n        this.selector = document.querySelector(parentSelector);\r\n        this.classes = classes;\r\n        this.chagetoUAH();\r\n        \r\n    }\r\n    chagetoUAH () {\r\n    this.stoimost = Math.round(this.stoimost * 27);\r\n    }\r\n    render () {\r\n    const item = document.createElement('div');\r\n    if(this.classes.length === 0){\r\n        item.classList.add('menu__item'); // если забыли указать класс при передачи данных\r\n    } else{\r\n        this.classes.forEach(className => {item.classList.add(className)});\r\n    }\r\n    // за счет rest оператора задали classes(явл массивом), т.о. передав значение мы придали окну класс\r\n            //item.classList.add('.menu__item');\r\n            item.innerHTML = `\r\n                <img src=${this.src} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">Меню \"${this.title}\"</h3>\r\n                <div class=\"menu__item-descr\">Меню \"${this.title}\" - ${this.opisan}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.stoimost}</span> грн/день</div>\r\n                </div>`;\r\n        this.selector.append(item);\r\n    }\r\n    }\r\n    \r\n\r\n    getResource('http://localhost:3000/menu') // путь по которому открыт json сервер туда уходит запрос\r\n    .then(data => {            // запрос приходит в массиве data - ответ от сервера\r\n        data.forEach(({img,altimg,title,descr,price}) =>{ //деструктуризация(из объекта вытаскиваем отдельные свойства в качестве отдельной переменной)\r\n            new MenuCard(img, altimg,title,descr,price,'.menu .container').render(); // этот конструктор делает так, что он будет создаваться столько раз сколько объектов в массиве (кол-во объектов это  кол-во объектов в базе)\r\n        \r\n        });\r\n    });\r\n\r\n    const addMenu = new MenuCard (\"img/tabs/vegy.jpg\",\"vegy\",'Фитнес','opisan',500,'.menu .container','menu__item');\r\n    //addMenu.render();\r\n\r\n}\r\n\r\nexport default cards;","import {closeModal,openModal} from './modal';\r\nimport {postData} from '../services/services';\r\n\r\nfunction forms (modalTimerrId,formsSelector){\r\n    // отправка формы методом POST -----------------------------------------------------------------------------------------------------------------------\r\n    const forms = document.querySelectorAll(formsSelector);\r\n    const message = {\r\n        loading:'img/form/spinner.svg',\r\n        succces:'Скоро мы с вами свяжемся !',\r\n        failore:'Что то пошло не так'\r\n    };\r\n\r\n    forms.forEach(item =>{\r\n        bindpostData(item);\r\n    });\r\n\r\n    function bindpostData (form) {           // отвечает за привязку постинга\r\n        form.addEventListener('submit', (event)=>{\r\n            event.preventDefault();\r\n\r\n            const statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `display: block; \r\n                                        margin: 0 auto`;\r\n            form.insertAdjacentElement('afterend',statusMessage);\r\n\r\n            \r\n            //request.setRequestHeader('Content-type','application/json; charset=utf-8;');\r\n            const formData = new FormData(form);  // собирает все данные с формы с инпут элементов\r\n            \r\n            const json = JSON.stringify(Object.fromEntries(formData.entries())); // преобразет формдату в массив массивов, а затем в объект а после в json\r\n\r\n            // const object = {};\r\n            // formData.forEach(function(value,key) {\r\n            //     object[key] = value;\r\n            // });\r\n\r\n                // fetch('server.php',{\r\n                //      method:'POST',\r\n                //      body:JSON.stringify(object),\r\n                //      headers:{'Content-type':'application/json'}    \r\n                // })\r\n                postData('http://localhost:3000/requests',json)\r\n                .then(data => {\r\n                    console.log(data);\r\n                    showThanksModal(message.succces);\r\n                    statusMessage.remove();\r\n                }).catch(() =>{\r\n                    showThanksModal(message.failore);\r\n                }).finally(() => {\r\n                    form.reset();\r\n                })\r\n\r\n\r\n            // const json = JSON.stringify(object);\r\n            \r\n            // request.send(json);\r\n\r\n            // request.addEventListener('load', () =>{\r\n            //     if(request.status === 200){\r\n            //         console.log(request.response);\r\n            //         showThanksModal(message.succces);\r\n            //         form.reset();// очиска формы\r\n            //         setTimeout(()=>{statusMessage.remove()},2000);// удаление innera через время\r\n            //     }else{ showThanksModal(message.failore);}\r\n\r\n            // });\r\n            \r\n        });\r\n    }\r\n     // улучшение модального окна(окно благодарности); -----------------------------------------------------------------------------------------------------------------------\r\n\r\n     function showThanksModal (message){\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n        prevModalDialog.classList.add('hide');\r\n\r\n        openModal('.modal', modalTimerrId);\r\n\r\n        const thanksModal = document.createElement('div');\r\n        thanksModal.classList.add('modal__dialog');\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div data-close class=\"modal__close\">&times;</div>\r\n                <div  class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `;\r\n\r\n        document.querySelector('.modal').append(thanksModal);\r\n\r\n        setTimeout(() =>{\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal('.modal');\r\n        },4000);\r\n    \r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default forms;","\r\n function closeModal (modalSelector){\r\n    const   modalWindow = document.querySelector(modalSelector);\r\n    modalWindow.classList.add('hide');\r\n    modalWindow.classList.remove('show');\r\n    // modalWindow.style.display = 'none';\r\n    document.body.style.overflow = '';\r\n    }\r\n    function openModal(modalSelector,modalTimerrId) {\r\n        const   modalWindow = document.querySelector(modalSelector);\r\n        modalWindow.classList.add('show');\r\n        modalWindow.classList.remove('hide');\r\n        // modalWindow.style.display = 'block';\r\n        document.body.style.overflow = 'hidden';\r\n        console.log(modalTimerrId);\r\n        if(modalTimerrId){\r\n            clearInterval(modalTimerrId);\r\n\r\n        }\r\n\r\n    }\r\n\r\nfunction modal (triggerSelector, modalSelector,modalTimerrId){\r\n    // модальное окно -----------------------------------------------------------------------------------------------------------------------\r\n\r\n    const modalOpen = document.querySelectorAll(triggerSelector),\r\n    modalWindow = document.querySelector(modalSelector);\r\n\r\n    modalOpen.forEach( item => {\r\n    item.addEventListener('click',()=>openModal(modalSelector,modalTimerrId));\r\n    });\r\n       \r\n\r\n    modalWindow.addEventListener('click', (event) =>{\r\n    if(event.target === modalWindow || event.target.getAttribute('data-close') == ''){\r\n        closeModal(modalSelector);\r\n    }\r\n    });\r\n    document.addEventListener('keydown',(e) =>{\r\n    if(e.code === 'Escape' ){\r\n        if(modalWindow.style.display == 'block'){\r\n        closeModal(modalSelector);\r\n        }\r\n    };\r\n\r\n    });\r\n\r\n\r\n\r\n    function showMyModal () {\r\n    window.addEventListener('scroll',() =>{\r\n        if(window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight){\r\n            openModal(modalSelector,modalTimerrId);\r\n            window.removeEventListener('scroll',showMyModal);\r\n        }\r\n    });\r\n    };\r\n    window.addEventListener('scroll',showMyModal);\r\n   \r\n}\r\n\r\nexport default modal;\r\nexport {closeModal};\r\nexport{openModal};","function slider ({container,nextArrow,prevArrow,slides,totalCounter,currentCounter,wrapper,field}) {\r\n    // слайдер\r\n\r\n    const   slide = document.querySelectorAll(slides),\r\n    prev = document.querySelector(prevArrow),\r\n    next = document.querySelector(nextArrow),\r\n    current = document.querySelector(currentCounter),\r\n    total = document.querySelector(totalCounter),\r\n    slidesField = document.querySelector(field), // иннер\r\n    slidesWrapper = document.querySelector(wrapper), // внешний \r\n    width = window.getComputedStyle(slidesWrapper).width,  // получает ширину slidesWrapper а точнее то место где будет наш слайд;\r\n    slider = document.querySelector(container); // общий блок со слайдером,нумерацией и т д\r\n    //1 вариант слайда(более простой)\r\n    // let index = 1;\r\n\r\n    //   function showSlide(n){\r\n    //       if(n > slide.length){\r\n    //           index = 1;\r\n    //       }\r\n    //       if(n < 1){\r\n    //         index = slide.length;\r\n    //     }\r\n    //     slide.forEach(item =>{\r\n    //         item.style.display = 'none';\r\n    //     })\r\n\r\n    //     slide[index-1].style.display = 'block';\r\n    //     current.innerHTML = `${zeroZnach(index)}`;\r\n    //     total.innerHTML = `${zeroZnach(slide.length)}`;\r\n\r\n    //   }\r\n\r\n    //   showSlide(index);\r\n\r\n    //   function changeSlide (n) {\r\n    //       showSlide(index += n)\r\n    //   }\r\n    // //   setInterval(showSlide(),1000);\r\n\r\n    //   next.addEventListener('click',(e)=>{\r\n    //     e.preventDefault();\r\n    //    changeSlide(1);\r\n    //   });\r\n\r\n    //   prev.addEventListener('click',(e)=>{\r\n    //     e.preventDefault();\r\n    //     changeSlide(-1);\r\n    //   });\r\n\r\n    //   function zeroZnach (z){\r\n    //     if(z>0 && z<10){\r\n    //          let str='0'+z;\r\n    //          return str;\r\n    //     }else { return z; }\r\n    // }\r\n    // 2 вариант слайда с анимацие по типу карусель\r\n\r\n    let index = 1;\r\n    let offset = 0; // чтобы передвигать слайды мы будем сдвигать блок со \r\n                //слайдом либо влево либо вправо таким образом ориентиром будет отсуп чтобы мы могли знать на сколько отсутпать при помощи transform \r\n\r\n    function nullsZnach (){\r\n    if(index<10){                                 // Подстановка нуля перед значением чтобы юыло двухзнач число\r\n        total.textContent = `0${slide.length}`;\r\n        current.textContent = `0${index}`;\r\n    }else { \r\n        total.textContent = slide.length; \r\n        current.textContent = index;  \r\n        }\r\n    }\r\n    nullsZnach();\r\n\r\n    slidesField.style.width = 100 * slide.length + '%'; // Задаем ширину блоку(она равна ширине всех слайдов вместе взятых)  процент для того чтобы мы могли поместить это в css \r\n    slidesField.style.display = 'flex'; // Для того чтобы у нас слайды вы строились в строку иначе перемещение было бы вертикальным только надо было задать высоту вместо ширины\r\n    slidesField.style.transition = '0.5s all'; // чтобы плавно перемещались слайды св-во css\r\n    slidesWrapper.style.overflow = 'hidden'; // чтобы все слайды не показывались строку, мы скрываем ненужные. т.е убираем их с области видимости которые не входят в ширину\r\n\r\n    slide.forEach(item => {\r\n    item.style.width = width;\r\n    }); // Задаем шиирну каждому слайду на случай если вдруг она не определена, чтобы она была одинаковой\r\n\r\n    slider.style.position = 'relative'; // чтобы все элементы слайдера которые абсолютно позиционировались нормально отображались\r\n\r\n    const indicators = document.createElement('ol'); // блок с точками\r\n    let dots = []; // массив для получения точек, а точнее для того чтобы можно было назначать класс активности при перемещении\r\n\r\n    indicators.classList.add('carousel-indicators');\r\n    indicators.style.cssText = `\r\n                            position: absolute;\r\n                            right: 0;\r\n                            bottom: 0;\r\n                            left: 0;\r\n                            z-index: 15;\r\n                            display: flex;\r\n                            justify-content: center;\r\n                            margin-right: 15%;\r\n                            margin-left: 15%;\r\n                            list-style: none;\r\n                            `; // добавление стилей для точек\r\n    slider.append(indicators);\r\n\r\n    for(let i=0; i < slide.length;i++){\r\n    const dot = document.createElement('li'); // создаем столько точек сколько слайдеров\r\n    dot.setAttribute('data-slide-to',i+1); // установка атрибута для точки, чтобы точка соответсвовала слайду\r\n                                        // каждой точки атрибут data-slide-to к какому слайду она будет относиться\r\n                                        // начиная с 1 так как 1 это первый слайд\r\n    dot.classList.add('dot');\r\n    dot.style.cssText = `\r\n                        box-sizing: content-box;\r\n                        flex: 0 1 auto;\r\n                        width: 30px;\r\n                        height: 6px;\r\n                        margin-right: 3px;\r\n                        margin-left: 3px;\r\n                        cursor: pointer;\r\n                        background-color: #fff;\r\n                        background-clip: padding-box;\r\n                        border-top: 10px solid transparent;\r\n                        border-bottom: 10px solid transparent;\r\n                        opacity: .5;\r\n                        transition: opacity .6s ease;\r\n                        `;\r\n    if(i == 0){  // делаем точку активной, 0 т.к всегда будет открыт первый слайд в начале\r\n        dot.style.opacity = 1;\r\n    }\r\n    indicators.append(dot);\r\n    dots.push(dot); // добавление точки в массив\r\n    }\r\n\r\n    function actinDot(){\r\n    dots.forEach(dot => dot.style.opacity = '.5'); // изначально у каждой точки устанавливаем стиль чтобы они были не активны\r\n    dots[index - 1].style.opacity = 1;  // добавляем калсс активноти к нужной точке\r\n    };\r\n\r\n    next.addEventListener('click',() =>{\r\n    if(offset == (+width.slice(0,width.length -2) * (slide.length - 1))){  \r\n        // Ел=сли отступ равен ширене одного слайда (width * кол-во слайдов(всего их пока 4) -1 итого стало(3)) тогда возвр в самое начало\r\n        // Т.к как в переменной ширине лежит значение из css с px, то нам надо его убрать за счет slice\r\n        // мы вырезаем все кроме последних двух элементов как раз без px (width.length -2 все символы минус 2 последних) \r\n        // + преобразщует в числовой формат так как до этого была строка вообще лучше делать через регулярные выражения\r\n        offset = 0;\r\n    } else{\r\n        offset += +width.slice(0,width.length -2); // если слайд не последний то смещение увеличиваем на ширину 1 cлайда\r\n    }\r\n\r\n    slidesField.style.transform = `translateX(-${offset}px)`; // Смещение влево так как минус, вправо был бы плюс  по иксу, использование интерполяции offset на сколько\r\n\r\n    if(index == slide.length){ // послде последнего слайда первый\r\n        index = 1;\r\n    }else {\r\n        index++;\r\n    }\r\n    nullsZnach(); // доавблегние нуля\r\n    actinDot(); // добавление класса активности\r\n\r\n    });\r\n\r\n    prev.addEventListener('click',() =>{\r\n    if(offset == 0){ \r\n        offset = +width.slice(0,width.length -2) * (slide.length - 1); \r\n        \r\n    } else{\r\n        offset -= +width.slice(0,width.length -2);\r\n    }\r\n\r\n    slidesField.style.transform = `translateX(-${offset}px)`; \r\n\r\n    if(index == 1){\r\n        index = slide.length;\r\n    }else {\r\n        index--;\r\n    }\r\n    nullsZnach();\r\n\r\n    actinDot(); // добавление класса активности\r\n    });\r\n\r\n    dots.forEach(dot => {\r\n    dot.addEventListener('click',(e)=>{\r\n        const slideTo = e.target.getAttribute('data-slide-to'); // задаем атрибут при нажатии на точку\r\n\r\n        index = slideTo; // чтобы точка соответствовала слайду\r\n        offset = +width.slice(0,width.length -2) * (slideTo - 1); // зададим смещение как и в обработчике событий\r\n                                                                // slideTo потому что точка указывает какой именно йлсайд сейчас\r\n        slidesField.style.transform = `translateX(-${offset}px)`; // производим смещение\r\n\r\n        \r\n        nullsZnach(); // установка нуля\r\n        actinDot(); // добавление класса активности\r\n        });\r\n\r\n\r\n\r\n    })\r\n\r\n}\r\nexport default slider;","\r\n\r\nfunction tabs (tabsSeelctor,tabsContentSelector,tabsParentSelector,activTabsSelector){\r\n       //Tabs-----------------------------------------------------------------------------------------------------------------------\r\n        const tabs = document.querySelectorAll(tabsSeelctor),\r\n        tabsContent = document.querySelectorAll(tabsContentSelector),\r\n        tabsParent = document.querySelector(tabsParentSelector);\r\n\r\n        function hideTabContent () {\r\n        tabsContent.forEach(item => {\r\n        item.style.display = 'none';\r\n        });\r\n        tabs.forEach(item =>{\r\n        item.classList.remove(activTabsSelector);\r\n        });\r\n        }\r\n\r\n        function showTabContent (i=0) {\r\n        tabsContent[i].style.display = 'block';\r\n        tabs[i].classList.add(activTabsSelector);\r\n        };\r\n\r\n        hideTabContent();\r\n        showTabContent();\r\n\r\n        tabsParent.addEventListener('click',(event) => {\r\n        const target = event.target;\r\n\r\n        if(target && target.classList.contains(tabsSeelctor.slice(1))){ // slice(1) удаляет точку вначалае т.к tabsSeelctor это селектор а здесь нужно название класса\r\n        tabs.forEach((item,i) =>{\r\n            if(target == item){\r\n                hideTabContent();\r\n                showTabContent(i);\r\n\r\n            };\r\n        });\r\n        }\r\n        });\r\n\r\n}\r\n\r\nexport default tabs;","\r\n\r\nfunction timer (timerSelector,deadline){\r\n    //taimer-----------------------------------------------------------------------------------------------------------------------\r\n\r\n    function getTimeRemaining (endTime) {\r\n        const t = Date.parse(endTime) - Date.parse(new Date());\r\n\r\n        const days = Math.floor(t/(1000*60*60*24)),\r\n            hours = Math.floor((t/(1000*60*60))%24),\r\n            minutes = Math.floor((t/(1000*60))%60),\r\n            seconds = Math.floor((t/1000)%60);\r\n\r\n        return{\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        }\r\n    };\r\n\r\n    function setClock (select,endTime) {\r\n        const timer = document.querySelector(timerSelector),\r\n            days = document.querySelector('#days'),\r\n            hours = document.querySelector('#hours'),\r\n            minutes = document.querySelector('#minutes'),\r\n            seconds = document.querySelector('#seconds');\r\n\r\n        const timeInterval = setInterval(updateClock,1000);\r\n        updateClock();\r\n        function updateClock() {\r\n            const t = getTimeRemaining(endTime);\r\n            \r\n            days.innerHTML = getZero(t.days),\r\n            hours.innerHTML = getZero(t.hours),\r\n            minutes.innerHTML = getZero(t.minutes),\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if (t.total <= 0){\r\n                clearInterval(timeInterval);\r\n\r\n                days.textContent = '00';\r\n                hours.textContent = '00';\r\n                minutes.textContent = '00';\r\n                seconds.textContent = '00';\r\n\r\n            };\r\n\r\n        };\r\n\r\n    };\r\n    function getZero (num){\r\n        if(num >= 0 && num < 10){\r\n            return `0${num}`;\r\n        } else { return num;}\r\n    }\r\n    setClock(timerSelector,deadline);\r\n\r\n}\r\n\r\nexport default timer;","const postData = async(url,data) => {                    //отвечает за постинг данных(когда мы их отправляем на сервер)\r\n    const res = await fetch(url,{                         // настраивает наш запрос фетчит запрос на сервер и получает ответ,\r\n        method: \"POST\",                             //  а затем настраивает его в json формат и передает нам\r\n        headers:{'Content-type':'application/json'},\r\n        body:data\r\n    });\r\n\r\n    return await res.json(); // промис вовзращается только после того как выполнится за счет await\r\n}  \r\n\r\nconst getResource = async(url) => {        //Получаем данные с сервера\r\n    const res = await fetch(url);             \r\n\r\n    if(!res.ok){  // если не все хорошо (.ок св-во которое говорит что все хорошо или нет)\r\n    throw new Error(`Coul not fetch ${url}, status: $${res.status}`); //  в  объекте ошибки получаем текст ошибки о том что произошло\r\n    }\r\n    return await res.json();\r\n    };\r\n\r\n\r\nexport {postData};\r\nexport{getResource};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\"use strict\";\r\n\r\nimport tabs from './modules/tabs';\r\nimport modal from './modules/modal';\r\nimport calc from './modules/calc';\r\nimport cards from './modules/cards';\r\nimport forms from './modules/forms';\r\nimport slider from './modules/slider';\r\nimport timer from './modules/timer';\r\nimport{openModal} from './modules/modal';\r\nwindow.addEventListener('DOMContentLoaded',() => {\r\n\r\n    const modalTimerrId = setTimeout(()=>openModal('.modal',modalTimerrId),60000);\r\n\r\n          tabs('.tabheader__item','.tabcontent','.tabheader__items','tabheader__item_active');\r\n          modal('[data-modal]','.modal',modalTimerrId);\r\n          calc();\r\n          cards();\r\n          forms(modalTimerrId,'form');\r\n          slider({\r\n                container: '.offer__slider',\r\n                nextArrow: '.offer__slider-next',\r\n                prevArrow: '.offer__slider-prev',\r\n                slides:'.offer__slide',\r\n                totalCounter:'#total',\r\n                currentCounter: '#current',\r\n                wrapper:'.offer__slider-wrapper',\r\n                field: '.offer__slider__inner'\r\n          });\r\n          timer('.timer','2022-01-21');\r\n\r\n}); \r\n\r\n"],"names":[],"sourceRoot":""}